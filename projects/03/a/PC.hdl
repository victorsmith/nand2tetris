// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // No need to check if only 1 load, reset or inc is set. 
    // Instead just establish a heirarchy of precedence, and set up the mux's in that order 
    // 1) Reset - Nulls everything
    // 2) Load - Loads data. If data is loaded, the incremented result is ignored
    // 3) Inc - Adds 1  to previous result

    Register(in=resetOut, load=true, out=outLoop, out=out);
    Mux16(a=loadOut, b=false, sel=reset, out=resetOut);    
    Mux16(a=incOut, b=in, sel=load, out=loadOut);    
    Mux16(a=outLoop, b=incLoadOut, sel=inc, out=incOut);    
    Inc16(in=outLoop, out=incLoadOut);

}
