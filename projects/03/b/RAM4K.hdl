// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1);

    // 0 1 2 | 3 4 5 | 6 7 8 
    // 9 10 11
    RAM512(in=in, load=a1, address=address[0..8], out=a2);
    RAM512(in=in, load=b1, address=address[0..8], out=b2);
    RAM512(in=in, load=c1, address=address[0..8], out=c2);
    RAM512(in=in, load=d1, address=address[0..8], out=d2);
    RAM512(in=in, load=e1, address=address[0..8], out=e2);
    RAM512(in=in, load=f1, address=address[0..8], out=f2);
    RAM512(in=in, load=g1, address=address[0..8], out=g2);
    RAM512(in=in, load=h1, address=address[0..8], out=h2);


    Mux8Way16(a=a2, b=b2, c=c2, d=d2, e=e2, f=f2, g=g2, h=h2, sel=address[9..11], out=out);
}